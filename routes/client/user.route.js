const express = require("express");
const router = express.Router();
const userController = require("../../controllers/client/user.controller");
const userValidate = require("../../validates/client/user.validate");
const authMiddleware = require("../../middlewares/client/auth.middleware");

const storageHelper = require("../../helpers/storageMulter");
const multer  = require('multer')
const upload = multer({ storage: storageHelper() });
router.get('/register',userController.register) ;
router.post('/register',userValidate.registerPost,userController.registerPost) ;
router.get('/login',userController.login) ;
router.post('/login',userValidate.loginPost,userController.loginPost) ;
router.get('/logout',userController.logout) ;
router.get('/password/forgot',userController.forgotPassword) ;
router.post('/password/forgot',userValidate.forgotPasswordPost,userController.forgotPasswordPost) ;
router.get('/password/otp',userController.otpPassword) ;
router.post('/password/otp',userValidate.otpPasswordPost,userController.otpPasswordPost) ;
router.get('/password/reset',userController.resetPassword) ;
router.post('/password/reset',userValidate.resetPasswordPost,userController.resetPasswordPost) ;
router.get('/info',authMiddleware.requireAuth,userController.info) ;
router.post('/info/edit',userValidate.editInfo,upload.single('avatar'),authMiddleware.requireAuth,userController.editInfo) ;
router.post('/info/change-password',userValidate.changePassword,authMiddleware.requireAuth,userController.changePassword) ;
router.get('/history-orders',authMiddleware.requireAuth,userController.historyOrders) ;
router.post('/history-orders/cancel',authMiddleware.requireAuth,userController.CancelOrder) ;
router.post('/history-orders/confirm',authMiddleware.requireAuth,userController.ConfirmOrder) ;
router.post('/history-orders/unreceived',authMiddleware.requireAuth,userController.Unreceived) ;
router.post('/history-orders/review/:orderId',upload.single('image'),authMiddleware.requireAuth,userController.review) ;
router.get('/chat',authMiddleware.requireAuth,userController.chat);
module.exports = router;